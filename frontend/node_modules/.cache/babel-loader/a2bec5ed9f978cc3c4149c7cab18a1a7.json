{"ast":null,"code":"import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(options?.in, laterDate, laterDate, earlierDate);\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(differenceInCalendarMonths(workingLaterDate, earlierDate_));\n  if (difference < 1) return 0;\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27) workingLaterDate.setDate(30);\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (isLastDayOfMonth(laterDate_) && difference === 1 && compareAsc(laterDate_, earlierDate_) === 1) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n} // Fallback for modularized imports:\n\nexport default differenceInMonths;","map":{"version":3,"names":["normalizeDates","compareAsc","differenceInCalendarMonths","isLastDayOfMonth","differenceInMonths","laterDate","earlierDate","options","laterDate_","workingLaterDate","earlierDate_","in","sign","difference","Math","abs","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","result"],"sources":["/Users/omerpeled/Documents/GitHub/MERN-Workout-Ninja/frontend/node_modules/date-fns/differenceInMonths.js"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,WAAvC,EAAoDC,OAApD,EAA6D;EAClE,MAAM,CAACC,UAAD,EAAaC,gBAAb,EAA+BC,YAA/B,IAA+CV,cAAc,CACjEO,OAAO,EAAEI,EADwD,EAEjEN,SAFiE,EAGjEA,SAHiE,EAIjEC,WAJiE,CAAnE;EAOA,MAAMM,IAAI,GAAGX,UAAU,CAACQ,gBAAD,EAAmBC,YAAnB,CAAvB;EACA,MAAMG,UAAU,GAAGC,IAAI,CAACC,GAAL,CACjBb,0BAA0B,CAACO,gBAAD,EAAmBC,YAAnB,CADT,CAAnB;EAIA,IAAIG,UAAU,GAAG,CAAjB,EAAoB,OAAO,CAAP;EAEpB,IAAIJ,gBAAgB,CAACO,QAAjB,OAAgC,CAAhC,IAAqCP,gBAAgB,CAACQ,OAAjB,KAA6B,EAAtE,EACER,gBAAgB,CAACS,OAAjB,CAAyB,EAAzB;EAEFT,gBAAgB,CAACU,QAAjB,CAA0BV,gBAAgB,CAACO,QAAjB,KAA8BJ,IAAI,GAAGC,UAA/D;EAEA,IAAIO,kBAAkB,GAAGnB,UAAU,CAACQ,gBAAD,EAAmBC,YAAnB,CAAV,KAA+C,CAACE,IAAzE;;EAEA,IACET,gBAAgB,CAACK,UAAD,CAAhB,IACAK,UAAU,KAAK,CADf,IAEAZ,UAAU,CAACO,UAAD,EAAaE,YAAb,CAAV,KAAyC,CAH3C,EAIE;IACAU,kBAAkB,GAAG,KAArB;EACD;;EAED,MAAMC,MAAM,GAAGT,IAAI,IAAIC,UAAU,GAAG,CAACO,kBAAlB,CAAnB;EACA,OAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD,C,CAED;;AACA,eAAejB,kBAAf"},"metadata":{},"sourceType":"module"}